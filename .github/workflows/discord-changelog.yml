name: Notify Discord on Version Tag Push

on:
  push:
    tags:
      - 'v*'

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to access all tags and history

      - name: Get previous tag
        id: prev_tag
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep '^v' | grep -v ${{ github.ref_name }} | head -n 1 || echo "")
          echo "Previous tag: $PREV_TAG"
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT

      - name: Get grouped commit log (no authors)
        run: |
          RANGE="${{ steps.prev_tag.outputs.prev_tag }}..${GITHUB_REF_NAME}"
          if [ -z "${{ steps.prev_tag.outputs.prev_tag }}" ]; then
            RANGE="${GITHUB_REF_NAME}"
          fi

          echo "Generating grouped commit log for range: $RANGE"

          FEATURES=""
          FIXES=""
          CHORES=""
          OTHER=""

          while IFS= read -r LINE; do
            MSG=$(echo "$LINE" | sed -E 's/^.*: //')  # Remove prefix
            if [[ "$LINE" == feat:* ]]; then
              FEATURES="${FEATURES}- ${MSG}"$'\n'
            elif [[ "$LINE" == fix:* ]]; then
              FIXES="${FIXES}- ${MSG}"$'\n'
            elif [[ "$LINE" == chore:* ]]; then
              CHORES="${CHORES}- ${MSG}"$'\n'
            else
              OTHER="${OTHER}- ${LINE}"$'\n'
            fi
          done < <(git log $RANGE --pretty=format:'%s')

          {
            echo '\n\n'
            echo "## Features"
            echo "$FEATURES"
            echo "## Fixes"
            echo "$FIXES"
            echo "## Chores"
            echo "$CHORES"
            if [ -n "$OTHER" ]; then
              echo "**Other**"
              echo "$OTHER"
            fi
          } > commit_log.txt
      

      - name: Post to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          VERSION="${GITHUB_REF_NAME#refs/tags/}"
          COMMITS=$(cat commit_log.txt)

          PAYLOAD=$(jq -n \
            --arg username "ModBot Release" \
            --arg avatar_url "https://cdn.modsquad.tools/assets/images/logo.webp" \
            --arg content "# ðŸ“¦ New Release: \`$VERSION\`$COMMITS" \
            '{username: $username, avatar_url: $avatar_url, content: $content}')

          curl -X POST -H "Content-Type: application/json" \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK_URL"
